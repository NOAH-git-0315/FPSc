services:
  db:
    image: mysql:8.0
    container_name: my_mysql
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
    ports:
      - "3300:3306"
    volumes:
      - db_data:/var/lib/mysql
    networks:
      - FPScNet
    command: --character-set-server=utf8mb4 --collation-server=utf8mb4_unicode_ci

  backend:
    build: ./backend
    env_file:
      - .env
    container_name: spring-backend
    depends_on:
      - db
    environment:
      SPRING_DATASOURCE_URL: jdbc:mysql://db:3306/app_db
      SPRING_DATASOURCE_USERNAME: app_user
      SPRING_DATASOURCE_PASSWORD: app_pass
      SPRING_DISCORD_CLIENT_ID: ${SPRING_DISCORD_CLIENT_ID}
      SPRING_DISCORD_CLIENT_SECRET: ${SPRING_DISCORD_CLIENT_SECRET}
      SPRING_DISCORD_REDIRECT_URI: ${SPRING_DISCORD_REDIRECT_URI}
      SPRING_DISCORD_JWT_SECRET: ${SPRING_DISCORD_JWT_SECRET}

    ports:
      - "8081:8080"
    networks:
      - FPScNet
    volumes:
      - ./backend:/app

  nginx:
    build: ./nginx
    ports:
      - "80:80"
      - "443:443"
    depends_on:
      - backend
    networks:
      - FPScNet
    volumes:
      - ./nginx/default.conf:/etc/nginx/conf.d/default.conf:rw
      - /etc/letsencrypt:/etc/letsencrypt:rw

volumes:
  db_data:

networks:
  FPScNet:
    driver: bridge
# 先にbuild.batを実行すること

#docker cp data.sql my_mysql:/tmp/data.sql
#docker exec -it my_mysql mysql -u root -p app_db
#USE app_db;
#　SOURCE /tmp/data.sql
